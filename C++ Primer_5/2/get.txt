第二章.变量和基本类型

知识点总结：

1. 如果我们使用列表初始化且初始值存在丢失信息的风险（高精度向低精度转换），则编译器将报错；

2. extern语句如果包含初始值就不再是声明，而是定义；在函数体内部，如果试图初始化一个由extern标记的变量将印引发错误；

3. void *可以存放任意对象的地址，但不能直接操作void *所指的对象，也不能确定能在该对象上做哪些操作；

4. 默认状态下，const对象仅在文件内有效；

5. 声明为constexpr的变量一定是一个常量，而且必须用常量表达式初始化；

6. auto让编译器通过初始值来推算变量的类型，所以auto定义的变量必须有初始值；

7. decltype的作用是选择并返回操作数的数据类型，而不实际计算表达式的值，如果给变量加上一层或多层括号（变量变为表达式），
        则得到的永远是该表达式类型的引用；

8. auto和decltype的作用：对于不知道具体类型的变量或者函数返回值，使用他们可以避免出现类型不符而导致的错误；

C++11新特性：long long类型， 列表初始化， nullptr， constexpr， auto， decltype， 别名声明（using）， 类内初始值.
