第九章：顺序容器

知识点积累：

1. 当将一个容器初始化为另一个容器的拷贝时，两个容器的容器类型和元素类型都必须相同；但如果传递迭代器参数来拷贝一个范围时，
        只要能将要拷贝的元素转换为要初始化的容器的元素类型即可；

2. 赋值相关运算会导致指向左边容器内部的迭代器、引用和指针失效，而swap操作将容器内容交换将不会；（array和string除外）

3. 交换两个容器内容的操作保证会很快，因为元素本身并未交换，swap只交换了两个容器的内部数据结构；从而导致在swap操作后，
        指向容器的迭代器、引用和指针都不会失效，它们仍然指向swap操作之前所指向的那些元素，只不过交换之后这些元素已经
        属于不同的容器了；

4. 新标准库既提供成员函数版本的swap，也提供非成员版本的swap，统一使用非成员版本的swap是一个好习惯；

5. 关系运算符左右两边的对象必须是相同类型的容器，必须保存相同类型的元素，而且元素类型必须定义了相应的关系运算符；

6. const修饰的对象调用begin()、end()与调用cbegin()、cend()的返回值类型相同，都是const_iterator；

C++11新特性：array容器、cbegin()和cend()、增加了非成员版本的swap()
