第七章：类

知识点积累：

1. 只有当类没有声明任何构造函数时，编译器才会自动地生成默认构造函数；然而如果我们需要默认行为，可以通过在参数列表后面
        加上 = default来要求编译器生成构造函数；

2. 在定义类时，如果使用struct关键字，则定义在第一个访问说明符之前的成员都是public的；如果使用class，则是private的；

3. 友元声明只能出现在类定义的内部，但在类内出现的具体位置不限，友元不是类成员所以不受所在区域访问控制级别的约束；

4. 定义在类内部的成员函数都是自动inline的；

5. 如果一个类指定了友元类，则友元类的成员函数可以访问此类包括非公有成员在内的所有成员；

6. 编译器处理完类中的全部声明后才会处理成员函数的定义；

7. 如果类成员使用了外层作用域中的某个名字，而该名字代表一种类型，则类不能在之后重新定义该名字；

8. 如果类成员是const、引用，或者属于某种未提供默认构造函数的类类型，我们必须通过构造函数初始值列表为这些成员提供初值；

9. 编译器只会自动地执行一步的类型转换；

10. 当我们用explicit关键字声明构造函数时，它将只能以直接初始化的形式使用，编译器将不会在自动转换过程中使用该构造函数；

C++11新特性： = default、委托构造函数
