1. "多态"意味着一个“东西”有多种状态; 对于函数，一个函数名可以有多种函数定义(函数重载);对于运算符，一个符号可以有多种运算功能(运算符重载);

2. 类：一种将抽象转换为用户定义类型的C++工具，它将数据表示和操纵数据的方法组合成一个整洁的包;

3. 同一个类的不同对象占用不同的内存块，但不同的对象使用同一个类成员函数时执行的是同一个代码块;

4. 典型的类声明格式：
	class className
	{
		private: //可省略
			date member declarations 	//数据成员
		public:
			member function prototypes 	//成员函数
	};

5. 类设计步骤：类声明-->实现成员函数;

6. 类构造函数：专门用于构造新对象、将值赋给他们的数据成员; 程序声明对象时将自动调用默认构造函数;

7. 初始化对象的方法： ①显式地调用构造函数，例：Stock food = Stock("World Cabbage", 250, 1.25);
		      ②隐式地调用构造函数，例：Stock garment("Furry Mason", 50, 2.5); 或
		      			       Stock * pstock = new Stock("Electroshock Games", 18, 19.0);
		注：构造函数用于创建对象时初始化对象，不能通过对象来调用;

8. C++标准允许编译器使用两种方法来执行  显式调用构造函数来创建新对象并初始化  ：
		①创建新对象并调用构造函数为其初始化;
		②调用构造函数创建一个临时对象，然后将其复制到新对象并丢弃它，此时临时对象将会调用析构函数;

9. 构造函数不仅可以在创建新对象时将其初始化，还可以为已存在的对象重新赋值.
	其原理是：创建一个临时对象并赋给新值，然后将其赋值给已存在的对象再调用析构函数以删除该临时对象;

10. C++11允许对类进行列表初始化，前提是要提供与某个构造函数的参数列表匹配的内容，并用大括号将他们括起;

11. 如果类方法(成员函数)不修改调用对象，则应将其声明为const. 例：void stock::show() const; (定义时也要在函数头尾部加上const)

12. 可以将类限定符转换为函数参数(指向类的指针)，然后用这个指针来访问类成员;

13. 使符号常量的作用域为类的方法有两种：①声明一个枚举; 该方式不会创建数据成员，它仅仅是一个符号名称.
					
					②使用关键字static修饰const型的符号常量; 它将和其他静态变量存储在一起，
					被所有的 该类的对象 所共享.

14. C++11提供了一种作用域为类的枚举，使其不会因同名而与其他枚举产生冲突; 声明该枚举时需要在 enum 后面加上关键字 class 或者 struct;

15. 可以通过类似于以下的语句来指定作用域为类的 枚举 的 底层类型 :
	enum class : short pizza {Small, Medium, Large, XLarge};

16. 可以在类成员函数中定义新的类对象并将其作为函数的返回值;
