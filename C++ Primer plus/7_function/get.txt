知识点：

1.利用交替进行的乘除法可以避免运算过程中中间值过大;

2.在声明形参时使用关键字const可以防止函数修改数组内容;

3.函数原型(C++) == 函数声明(C);

4.处理输入错误：cin >> temp;
		if ( !cin )
		{
			cin.clear();
			while ( cin.get() != '\n' )
			      continue;
			...;
		}

5.const int * pt = &age; *pt为const,不能用pt修改age,但可以用age修改;
  c++禁止将const变量的地址赋给非const的指针;
  int * const finger = &sloth; 可以用finger修改sloth的值，但是不可以给指针finger重新赋值;

6.二维数组作为形参的函数原型，如: int sum(int (*ar)[4], int size);或者 int sum(int ar[][4], int size);其中，ar为数组指针，指向一个长度为4个int型元素的数组,size为数组的行数;

7.要声明指向特定类型的函数指针，可以首先编写函数原型，然后用(*pf)替换函数名，这样pf就是该类型函数的指针;

8.将别名当做标示符进行声明，并在开头使用关键字typedef,可以创建函数指针的别名; 如，typedef const double *(*p_fun)(const double *, int); p_fun 就是该函数指针类型的别名，可以用它来定义函数指针变量，p_fun pf = f1;
