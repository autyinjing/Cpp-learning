1. a. char actor[30];
   b. short betsie[100];
   c. float chuck[13];
   d. long double dipsea[64];

2. a. array<char, 30> actor;
   b. array<short, 100> betsie;
   c. array<float, 13> chuck;
   d. array<long double, 64> dipsea;

3. int a[] = { 1, 3, 5, 7, 9 };

4. int even = a[0] + a[4];

5. std::cout << ideas[1];

6. char str1[] = "cheeseburger";

7. string str2 = "Waldorf Salad";

8. struct fish
{
	char 	type[10];
	int 	weight;
	float 	length;
};

9. fish 	f1 = { "cao", 5, 23.5 };

10. enum Response{ No, Yes, Maybe };

11. double * tp = &ted;
    std::cout << *tp;

12. float * tp = treacle;
    std::cout << *tp << *(tp + sizeof (treacle));

13. cin >> num;
    int * ip = new int (num);

    vector<int> ip(num);

14. 有效，它将打印字符串的地址值;

15. fish * f1 = new fish;
    std::cout << f1->type << f1->weight << f1->length;

16. 输入地址后，下一次输入将被缓冲区中的回车符冲掉;

17. #include <vector>
    #include <array>
    #include <string>

    const int StrNum = 10;
    vector<string> str(StrNum);
    array<string, 10> str;
